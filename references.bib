@book{BORA,
  added-at = {2010-03-21T11:37:19.000+0100},
  author = {Rabaey, Jan M. and Chandrakasan, Anantha and Nikolic, Borivoje},
  biburl = {https://www.bibsonomy.org/bibtex/2a4b6d94ef6a1028b9dd0fd8d19e63fb1/heartsoar},
  edition = {2ed},
  interhash = {783ae3be223d82d91a21986acbbaf13a},
  intrahash = {a4b6d94ef6a1028b9dd0fd8d19e63fb1},
  keywords = {},
  publisher = {Prentice Hall},
  timestamp = {2010-03-21T11:37:19.000+0100},
  title = {Digital integrated circuits- A design perspective},
  year = 2004
}


@manual{dfi,
    organization  = "Cadence Design System",
    title         = "DFI - DDR PHY Interface",
    number        = "DFI 5.1",
    year          =  2021,
    month         =  5,    
}

@manual{jedec,
    organization  = "JEDEC",
    title         = "Low Power Double Data Rate 4X (LPDDR4X)",
    number        = "JESD209-4-1A",
    year          =  2021,
    month         =  1,    
}
@techreport{Asanović:EECS-2016-17,
    Author = {Asanović, Krste and Avizienis, Rimas and Bachrach, Jonathan and Beamer, Scott and Biancolin, David and Celio, Christopher and Cook, Henry and Dabbelt, Daniel and Hauser, John and Izraelevitz, Adam and Karandikar, Sagar and Keller, Ben and Kim, Donggyu and Koenig, John and Lee, Yunsup and Love, Eric and Maas, Martin and Magyar, Albert and Mao, Howard and Moreto, Miquel and Ou, Albert and Patterson, David A. and Richards, Brian and Schmidt, Colin and Twigg, Stephen and Vo, Huy and Waterman, Andrew},
    Title = {The Rocket Chip Generator},
    Institution = {EECS Department, University of California, Berkeley},
    Year = {2016},
    Month = {Apr},
    URL = {http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-17.html},
    Number = {UCB/EECS-2016-17},
    Abstract = {Rocket Chip is an open-source Sysem-on-Chip design generator that emits synthesizable RTL. It leverages the Chisel hardware construction language to compose a library of sophisticated generators for cores, caches, and interconnects into an integrated SoC. Rocket Chip generates general-purpose processor cores that use the open RISC-V ISA, and provides both an in-order core generator (Rocket) and an out-of-order core generator (BOOM). For SoC designers interested in utilizing heterogeneous specialization for added efficiency gains, Rocket Chip supports the integration of custom accelerators in the form of instruction set extensions, coprocessors, or fully independent novel cores. Rocket Chip has been taped out (manufactured) eleven times, and yielded functional silicon prototypes capable of booting Linux.}
}



@article{chipyard,
  author={Amid, Alon and Biancolin, David and Gonzalez, Abraham and Grubb, Daniel and Karandikar, Sagar and Liew, Harrison and Magyar,   Albert and Mao, Howard and Ou, Albert and Pemberton, Nathan and Rigge, Paul and Schmidt, Colin and Wright, John and Zhao, Jerry and Shao, Yakun Sophia and Asanovi\'{c}, Krste and Nikoli\'{c}, Borivoje},
  journal={IEEE Micro},
  title={Chipyard: Integrated Design, Simulation, and Implementation Framework for Custom SoCs},
  year={2020},
  volume={40},
  number={4},
  pages={10-21},
  doi={10.1109/MM.2020.2996616},
  ISSN={1937-4143},
}

@inproceedings{10.1145/2228360.2228584,
author = {Bachrach, Jonathan and Vo, Huy and Richards, Brian and Lee, Yunsup and Waterman, Andrew and Avi\v{z}ienis, Rimas and Wawrzynek, John and Asanovi\'{c}, Krste},
title = {Chisel: Constructing Hardware in a Scala Embedded Language},
year = {2012},
isbn = {9781450311991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2228360.2228584},
doi = {10.1145/2228360.2228584},
abstract = {In this paper we introduce Chisel, a new hardware construction language that supports advanced hardware design using highly parameterized generators and layered domain-specific hardware languages. By embedding Chisel in the Scala programming language, we raise the level of hardware design abstraction by providing concepts including object orientation, functional programming, parameterized types, and type inference. Chisel can generate a high-speed C++-based cycle-accurate software simulator, or low-level Verilog designed to map to either FPGAs or to a standard ASIC flow for synthesis. This paper presents Chisel, its embedding in Scala, hardware examples, and results for C++ simulation, Verilog emulation and ASIC synthesis.},
booktitle = {Proceedings of the 49th Annual Design Automation Conference},
pages = {1216–1225},
numpages = {10},
keywords = {CAD},
location = {San Francisco, California},
series = {DAC '12}
}

@INPROCEEDINGS{8416816,
  author={Karandikar, Sagar and Mao, Howard and Kim, Donggyu and Biancolin, David and Amid, Alon and Lee, Dayeol and Pemberton, Nathan and Amaro, Emmanuel and Schmidt, Colin and Chopra, Aditya and Huang, Qijing and Kovacs, Kyle and Nikolic, Borivoje and Katz, Randy and Bachrach, Jonathan and Asanovic, Krste},
  booktitle={2018 ACM/IEEE 45th Annual International Symposium on Computer Architecture (ISCA)}, 
  title={FireSim: FPGA-Accelerated Cycle-Exact Scale-Out System Simulation in the Public Cloud}, 
  year={2018},
  volume={},
  number={},
  pages={29-42},
  doi={10.1109/ISCA.2018.00014}
  }

@misc{enjoydigital, title={LiteDRAM provides a small footprint and configurable DRAM core.}, url={http://www.enjoy-digital.fr/}, journal={enjoydigital}} 

@book{patterson,
author = {Patterson, David A. and Hennessy, John L.},
title = {Computer Architecture: A Quantitative Approach},
year = {1990},
isbn = {1558800698},
publisher = {Morgan Kaufmann Publishers Inc.},
address = {San Francisco, CA, USA}
}

@manual{tilelink,
    organization  = "SiFive",
    title         = "SiFive TileLink Specification",
    year          =  2017,
    month         =  8,
}

@inproceedings{10.1145/3489517.3530672,
author = {Liew, Harrison and Grubb, Daniel and Wright, John and Schmidt, Colin and Krzysztofowicz, Nayiri and Izraelevitz, Adam and Wang, Edward and Asanovi\'{c}, Krste and Bachrach, Jonathan and Nikoli\'{c}, Borivoje},
title = {Hammer: A Modular and Reusable Physical Design Flow Tool: Invited},
year = {2022},
isbn = {9781450391429},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3489517.3530672},
doi = {10.1145/3489517.3530672},
abstract = {Process technology scaling and hardware architecture specialization have vastly increased the need for chip design space exploration, while optimizing for power, performance, and area. Hammer is an open-source, reusable physical design (PD) flow generator that reduces design effort and increases portability by enforcing a separation among design-, tool-, and process technology-specific concerns with a modular software architecture. In this work, we outline Hammer's structure and highlight recent extensions that support both physical chip designers and hardware architects evaluating the merit and feasibility of their proposed designs. This is accomplished through the integration of more tools and process technologies---some open-source---and the designer-driven development of flow step generators. An evaluation of chip designs in process technologies ranging from 130nm down to 12nm across a series of RISC-V-based chips shows how Hammer-generated flows are reusable and enable efficient optimization for diverse applications.},
booktitle = {Proceedings of the 59th ACM/IEEE Design Automation Conference},
pages = {1335–1338},
numpages = {4},
location = {San Francisco, California},
series = {DAC '22}
}